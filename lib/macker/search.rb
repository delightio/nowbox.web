module Aji
  module Macker
    # The `Search` object encapsulates a request for multiple videos based on
    # the given parameters.
    class Search
      # - `param`: A hash which should contain one and only one of the
      # following possible values.
      #   - `keywords`: Array of string or symbol keywords.
      #   - `author`: String containing the author's id.
      # - `limit`: The number of results to return. 100 by default.
      # - `sources`: An array of symbols representing which sources to pull
      # content from. Defaults to all available.
      def initialize param, limit=100, sources=Macker.sources.keys
        @param = valid_param? param
        @limit = limit
        @sources = sources
      end

      def search
        @sources.map do |s|
          # By de-splatting (`*`) the array generated by param.first we get
          # the correct structure for the class-level search method.
          type, query = @param
          Macker.sources[s].search type, query
        end.flatten.first(@limit)
      end

      def valid_param? p
        error = ArgumentError.new.extend(Macker::Error)
        fail error, "Too many search params" if p.size > 1
        fail error, "Invalid search param" unless
          [ :author, :keywords ].include? p.keys.first
        p.first
      end
      private :valid_param?
    end
  end
end
